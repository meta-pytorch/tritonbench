name: linux-benchmark-h100
on:
  workflow_call:
    secrets:
      TRITONBENCH_SCRIBE_GRAPHQL_ACCESS_TOKEN:
        required: True
        description: |
          Tritonbench Scribe Graph Access Token
    inputs:
      benchmark_name:
        required: True
        type: string
        description: |
          Benchmark name
      side_a_triton:
        type: string
        required: True
        default: "triton-lang/triton"
        description: |
          Triton repository to test on side A, e.g., "triton-lang/triton"
      side_a_commit:
        type: string
        required: True
        description: |
          Triton commit or tag to test on side A, e.g., "main"
      side_b_triton:
        type: string
        required: True
        default: "triton-lang/triton"
        description: |
          Triton repository to test on side B, e.g., "triton-lang/triton"
      side_b_commit:
        type: string
        required: True
        description: |
          Triton commit or tag to test on side B, e.g., "main"

jobs:
  linux-benchmark-h100:
    if: github.repository_owner == 'pytorch-labs'
    runs-on: [gcp-h100-runner]
    timeout-minutes: 240
    environment: docker-s3-upload
    permissions:
      id-token: write
      contents: read
    env:
      SETUP_SCRIPT: "/workspace/setup_instance.sh"
      RUNNER_TYPE: "gcp-h100-runner"
      JOB_NAME: tritonbench-h100-abtest-${{ inputs.side_a_triton }}-${{ inputs.side_a_commit }}-${{ inputs.side_b_triton }}-${{ inputs.side_b_commit }}-${{ inputs.benchmark_name }}
      TRITONBENCH_SCRIBE_GRAPHQL_ACCESS_TOKEN: ${{ secrets.TRITONBENCH_SCRIBE_GRAPHQL_ACCESS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Tritonbench
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Tune Nvidia GPU
        run: |
          bash .ci/gpu/tune-gcp-h100.sh
          sudo ldconfig
          nvidia-smi
      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::308535385114:role/gha_workflow_upload-benchmark-results
          # The max duration enforced by the server side
          role-duration-seconds: 18000
          aws-region: us-east-1
      - name: Compile Triton (Side A)
        run: |
          bash ./.ci/triton/compile.sh --repo ${{ inputs.side_a_triton }} --commit ${{ inputs.side_a_commit }} --conda-env triton-side-a
      - name: Benchmark Triton (Side A)
        run: |
          bash ./.ci/tritonbench/run-benchmark.sh --conda-env triton-side-a
          cp -r .benchmarks/${{ inputs.benchmark_name }} benchmark-output/triton-side-a
      - name: Compile Triton (Side B)
        run: |
          bash ./.ci/triton/compile.sh --repo ${{ inputs.side_a_triton }} --commit ${{ inputs.side_a_commit }} --conda-env triton-side-b
      - name: Benchmark Triton (Side B)
        run: |
          bash ./.ci/tritonbench/run-benchmark.sh ${{ inputs.benchmark_name }} --conda-env triton-side-b
          cp -r ".benchmarks/${{ inputs.benchmark_name }}" benchmark-output/triton-side-b
      - name: Upload result to GH Actions Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.JOB_NAME }}
          path: benchmark-output/
      - name: Upload result to Scribe
        run: |
          . "${SETUP_SCRIPT}"
          triton_side_a_json=$(find ./benchmark-output/triton-side-a -name "result.json"  | sort -r | head -n 1)
          python ./.ci/upload/scribe.py --json ${triton_side_a_json}
          triton_side_b_json=$(find ./benchmark-output/triton-side-b -name "result.json"  | sort -r | head -n 1)
          python ./.ci/upload/scribe.py --json ${triton_side_b_json}
      - name: Rewrite Tritonbench json to ClickHouse style
        run: |
          . "${SETUP_SCRIPT}"
          triton_side_a_json=$(find ./benchmark-output/triton-side-a -name "result.json"  | sort -r | head -n 1)
          python ./.ci/test_infra/oss_ci_benchmark_v3.py --json "${triton_side_a_json}" \
                 --output benchmark-output/results/triton-side-a.json
          triton_side_b_json=$(find ./benchmark-output/triton-side-b -name "result.json"  | sort -r | head -n 1)
          python ./.ci/test_infra/oss_ci_benchmark_v3.py --json "${triton_side_b_json}" \
                 --output benchmark-output/results/triton-side-b.json
      - name: Setup uploader dependencies
        run: |
          sudo apt-get install -y python3-pip
      - name: Upload result to ClickHouse
        uses: pytorch/test-infra/.github/actions/upload-benchmark-results@main
        with:
          benchmark-results-dir: benchmark-output/results
          dry-run: false
          schema-version: v3
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Restore Nvidia GPU
        if: always()
        run: |
          bash .ci/gpu/reset-gcp-h100.sh
          sudo ldconfig
          nvidia-smi
